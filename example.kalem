#import <ios>
#import <stdstr>

// Some of Kalem's runtime flags.
!flag("output=testikebabi")
!flag("cpp-standard=c++2a")

@my_namespace namespace {
    @another_my_function(string test) void {
        @print "Hi, "
        @print test
    }
}

@my_function(string name) void {
    @print name
}

@my_test_function void {
    @print "Test\n"
}

@main int {
    string test = "Hello, Kalem!\n"

    int _test = 10
    unsign _test_ = 20

    @print "String: "
    @print test

    @print "\nInteger: "
    @print _test

    @print "\nUnsigned Integer: "
    @print _test_

    @print "\n"

    @my_function("Hi, from Kalem!\n")

    @my_test_function

    @my_test_function()

    #/* You can use directly C++ & C code with # token like this too.  */
    #my_namespace::another_my_function("Hi, C++!\n");
	
    @test: @print "argc: "
    
    #_test++;
    
    @print argc
    
    @print "\nargv[argc]: "
    @print argv[argc-1]
    @print "\n"

    
    if (_test == 11) {
    	@print "Passed [11]\n"
    } elsif (_test != 12) {
        @goto test
    } els {
    	@print "Passed : "
    	@print _test
    	@print "\n"
    }

    int i = 0

    loop {
        @print "Hello, world!\n"
        #i++;

        if (i == 2) {
            break
        }
    }

    @return 0
}
